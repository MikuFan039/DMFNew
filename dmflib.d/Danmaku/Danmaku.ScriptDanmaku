version=pmwiki-2.2.58 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36 Edg/101.0.1210.39
author=Admin
cauthor=Admin
charset=UTF-8
csum=
ctime=1652101145
host=127.0.0.1
name=Danmaku.ScriptDanmaku
rev=1
targets=
text=编写：小包子%0a技术顾问：面汤拌菜菌%0a%0a终于坑出来了...虽然我自己找了不少打错的字..但是肯定还有很多.%0a嘛..问题肯定不少.有问题请跟帖.%0a%0a前言%0a%0a高级弹幕不难.基础的部分非常简单.只需要你花上一点时间就可以轻松上手.重要的是需要对作品的理解以及对时间的把握.无论什么弹幕只需要一颗有爱的心就够了.弹幕需要是爱与人参.所以我希望大家不要去使用高级弹幕去做不好的事情.%0a%0a目录  %0a%0a第一章 初步了解高级弹幕%0a       1.1 变量%0a       1.2创建文本弹幕对象%0a       1.3 弹幕对象运动的设置%0a       1.4 绘图弹幕对象创建以及设置%0a              1.4.1颜色样式设置%0a                     1.4.1.1 beginFill 指定一种颜色进行填充%0a                     1.4.1.2 lineGradientStyle beginGradientFill指定一种线条样式,填充样式的渐变%0a                     1.4.1.3 lineStyle 指定线条样式%0a              1.4.2图形的绘制%0a                     1.4.2.1 绘制一条直线%0a                     1.4.2.2 绘制一条二次贝塞尔曲线%0a                     1.4.2.3 绘制一个圆%0a                     1.4.2.4 绘制一个椭圆%0a                     1.4.2.5 绘制一个矩形%0a                     1.4.2.5 绘制一个圆角矩形%0a%0a第二章 使用其他工具%0a       2.1Utils 工具库%0a              2.1.1 hue将0-360的值映射到色相环%0a              2.1.2 rgb将RGB值映射到色彩值上%0a              2.1.3 formatTimes格式化播放时间%0a              2.1.4 timer 延迟执行函数%0a              2.1.5 interval 定时重复执行函数%0a              2.1.6 distance 计算坐标距离%0a              2.1.7 rand 返回一个前闭后开的整数%0a       2.2 Function 函数的创建与使用%0a       2.3 播放器控制%0a              2.3.1视频时间跳转至%0a              2.3.2跳转到指定av号指定页视频%0a%0a%0a%0a第一章 初步了解高级弹幕%0a%0a%0a1.1 第一节 变量%0a%0a废话不多说.我们先来看一句最基本的弹幕.%0a1.	var a = 1;%0a首先一次个关键字是”var”.该关键字的意思就是声明一个变量.变量说的简单点就是在后面的过程中可以给 “a” 重新赋值.%0a然后就是变量名”a”了,这玩意理解成名字就行了.至于关于变量名的规则有些关键字与保留字是不允许创建的.保留字，关键字%0a第三个是运算符”=”,首先等于号并不是数学中的等于意思.而是给声明的变量a赋值.将等号右边的值赋予给左边.%0a第四个”1”就是一个值了.结尾的分号表示该语句结束.%0a%0a看到这里相信大家已经对这句弹幕有了基础的了解.这句话的意思就是：%0a声明变量”a”并且初始化其值为数字1.%0a写高级弹幕的时候请严格注意大小写.%0a1.	var 变量名 = 表达式;%0a%0a%0a1.2 第二节 创建文本弹幕对象.%0a%0a首先要知道bili的播放器的大小.像素为单位.%0a正常模式：宽541 高384%0a宽屏模式：宽950 高528%0a全屏模式与网页全屏模式根据显示器分辨率来确定.%0a在高级弹幕中在 实际弹幕时间会在发布时间轴填写的时间基础上减去约0.2秒.所以请注意时间轴的问题%0a%0a高级弹幕中创建新的文本弹幕对象要用到createComment（"",{}）这个语句.请看实例%0a1.	var a = $.createComment("text ",{x:100});%0a该弹幕的意思就是 创建一个变量a并创建一个新弹幕对象赋于a.%0a%0a我们可以这么理解createComment.他的括号内有2个参数.”text”是弹幕内容.｛x:100｝是该弹幕参数x轴上的位置是100.%0a当然括号内的不可能只有x这一个参数.我们可以用到的有.%0ax — 新创建元件的X轴座标%0ay — 新创建元件的Y轴座标%0az — 新创建元件的Z轴座标%0alifeTime — 元件的生存时间(以秒为单位)注：一旦设置不可更改%0aalpha — 元件的透明度%0acolor — 文字类元件的色彩%0afontsize — 文字类元件的大小%0aparent — 元件的父元件 (进阶应用)%0amotion — 元件移动策略%0ascale — 缩放%0a%0a那么我们来定义一个稍微复杂点的高级弹幕.%0a例：%0a1.	var c = $.createComment("text",{%0a2.	x:100,y:100,%0a3.	lifeTime:10,%0a4.	fontsize:20,%0a5.	color:0x666666,%0a6.	alpha:0.8%0a7.	});%0a(注：参数之间以英文逗号区分,最后一个参数结尾无逗号)%0a大家可以预览一下这条弹幕.就是在x轴100,y轴100的位置创建一个内容是text的弹幕.该弹幕生存时间为10秒.字体大小为20号.十六进制颜色为灰色.透明度0.8.%0a%0a那么.到了这里大家应该已经知道怎么去在一个点创建弹幕并设置该弹幕各项参数.%0a接下来就来说一下在创建后各项属性的更改与设置.%0a%0a现在.声明变量c并创建了一个弹幕内容为"测试"的弹幕.它的x轴为50,y轴为100.%0a例：%0a1.	var c = $.createComment("测试",{x:50,y:100});%0a那么如果我们现在需要让他的位置x轴不变y轴变更到50.那么我们这个时候就需要直接更改弹幕的某一个参数.只需要在弹幕后面加上.%0a1.	c.y = 50;%0a（注：更改颜色的语句不是c.color而是c.textColor.注意大小写）%0a此外还有比较常用的就是旋转3个轴的设置.%0ac.rotationX,rotationY,rotationZ.%0a例:%0a1.	c.rotationX=90;%0a设置字体为：%0a1.	c.font="宋体";%0a设置光昏效果：%0a1.	c.filters=[$.createGlowFilter(0xFF0000,1,16,17,2,1,false,true)];%0acreateGlowFilter 参数color 上例参数 0xFF0000  光晕颜色，采用十六进制格式 0xRRGGBB。默认值为 0xFF0000。%0aalpha 上例参数 1  颜色的 Alpha 透明度值。有效值为 0 到 1。例如，0.25 设置透明度值为 25%25。%0ablurX 上例参数 16  水平模糊量。有效值为 0 到 255（浮点）。2 的乘方值（如 2、4、8、16 和 32）经过优化，呈示速度比其他值更快。%0ablurY 上例参数 17  垂直模糊量。有效值为 0 到 255（浮点）。2 的乘方值（如 2、4、8、16 和 32）经过优化，呈示速度比其他值更快。%0astrength 上例参数 2  印记或跨页的强度。该值越高，压印的颜色越深，而且发光与背景之间的对比度也越强。有效值为 0 到 255。%0aquality 上例参数 1  应用滤镜的次数。使用 BitmapFilterQuality 常量：low，middle，high%0ainner 上例参数false  指定发光是否为内侧发光。值 true 指定发光是内侧发光。值 false 指定发光是外侧发光（对象外缘周围的发光）。%0aknockout 上例参数true   指定对象是否具有挖空效果。值为 true 将使对象的填充变为透明，并显示文档的背景颜色。%0a设置字体无黑边：%0a1.	c.filters=null;%0a另还有些参数也可以设置.详细参考%0a%0a%0a1.3 弹幕对象运动的设置%0a%0a在上一个章节中学习了如何创建文本对象和设置文本对象的参数.这次就讲如何让创建的弹幕对象运动起来.这里我们要用到motion.下面请看一个例子.%0a1.	var c = $.createComment("移动测试",{%0a2.	motion:{%0a3.	      x:{fromValue:100,toValue:250,lifeTime:3}%0a4.	},%0a5.	lifeTime:3%0a6.	});%0a让我们来分析这条弹幕.%0a首先上已经了解过了createComment的用法.那么我直接来看到多出来的这个属性motion.%0amotion:{ x:{fromValue:100,toValue:250,lifeTime:3}}%0a%0a在这里面其中x为需要移动的参数.x中的fromValue是x的起始位置toValue是结束位置.lifeTime是这个运动过程所花费的时间.(注:如果在motion里面x.y有起始值并且在motion外也设置x.y的值,那么将显示motion里面的设置位置)%0a此外motion支持多属性同时运动.%0a例：%0a1.	var c = $.createComment("移动测试",{%0a2.	    motion:{%0a3.	      x:{fromValue:100,toValue:250,lifeTime:3},%0a4.	      alpha:{fromValue:0,toValue:1,liftTime:3}%0a5.	   },%0a6.	lifeTime:3%0a7.	});%0a这次除了移动x轴还添加了一个透明度从0到1的变化.%0a下面我们说一下在motion中有哪些是可以做变化的.%0ax:移动x轴位置.%0ay:移动y轴位置.%0aalpha:透明度变换（有效值0-1）.%0afontsize:字体大小变换（不推荐使用.字号的变换较明显.%0arotationX, rotationY, rotationX:旋转x轴,旋转Y轴,旋转Z轴.%0a其中的属性值有:%0a必填       fromValue   起始移动属性值%0a可选       toValue     结束移动属性值如留空则不移动%0a可选       lifeTime            以秒为单位的移动生存时间如留空则与整体生存时间一致%0a可选       startDelay    以毫秒为单位的起始移动延时时间（毫秒为单位）%0a可选       easing    详细请看补间效果%0a可选       repeat    效果重复次数%0a%0a下面我们来看一个相对复杂的例子%0a1.	var c = $.createComment("移动测试",{%0a2.	      motion:{%0a3.	      x:{fromValue:100,toValue:250,lifeTime:3,startDelay:500},%0a4.	      y:{fromValue:50,toValue:250,lifteTime:3},%0a5.	      alpha:{fromValue:0,toValue:1,lifeTime:0.5,repeat:6}%0a6.	     },%0a7.	    lifeTime:3});%0a在这个例子里面我们用到了startDelay这个属性.我们把这个代码拆开分了3段来看.%0a%0a首先x轴的是从100移动到250.移动时间3秒.然后起始移动时间是500毫秒.也就是说x轴是在500毫秒后开始移动的.%0a然后是y轴从50移动到250移动时间3秒.%0a最后是透明度从0到1变化时间为0.5秒.重复执行6次.%0a%0a把这三个参数整合在一起就变成了.移动测试从x：100,y：50的位置开始移动,并且透明度最开始是0.由于x有一个起始移动时间.但是y轴跟透明度变化已经开始.所以首先"移动测试"会先渐入的向下移动.500毫秒后x开始移动这个时候y轴的移动还没有停第一次的透明度改变已经结束.所以x,y轴这个时候是同时移动的.最后结果回是往右下移动并且透明度会重复的从0到1..%0a%0a虽然可以使用repeat这个属性执行重复的操作.但是这个是远远不能满足复杂的移动效果的.然而去创建很多motion也是很麻烦的.这里我就需要用到motionGroup了.motionGroup能执行多个motion连续运动.%0a我们来看一个实例.%0a1.	var c = $.createComment("弹幕测试",{%0a2.	    x:100,y:50,%0a3.	motionGroup:[%0a4.	{x:{fromValue:100,toValue:200,lifeTime:1},alpha:{fromValue:0,toValue:1,lifeTime:1}},%0a5.	{y:{fromValue:50,toValue:150,lifeTime:1},alpha:{fromValue:1,toValue:0,lifeTime:1}}%0a6.	]%0a7.	});)%0a以上弹幕就是使用一个组将两个移动连接在了一起→↓.需要注意的是motionGroup的冒号后面的是英文中括号.并且每一次移动包括透明度都最好加上lifeTime并且每一个motion中的lifeTime的时间必须一致..每一次motion之间用英文逗号相隔.最后一个结尾无符号.%0a%0a%0a1.4 绘图弹幕对象创建以及设置%0a%0a使用命令：createShape%0a例子：%0a1.	var g = $.createShape({x:50,y:50,lifeTime:3,alpha:0.5});%0a首先创建一个新的图形对象.里面可以设置的内容同文本对象（位置,生存时间,透明度,运动设置等方法同creatComment）.%0a%0a绘图需要使用到的：%0acurveTo%0a使用当前线条样式绘制一条二次贝塞尔曲线%0adrawCircle%0a绘制一个圆.%0adrawEllipse%0a绘制一个椭圆%0adrawRect%0a绘制一个矩形%0adrawRoundRect%0a绘制一个圆角矩形%0alineTo%0a绘制一条直线%0abeginFill 指定一种颜色进行填充%0alineStyle%0a指定线条样式%0alineGradientStyle%0a指定一种线条样式的渐变%0abeginGradientFill%0a指定一种填充样式的渐变%0a%0a我们来一个个的来了解.首先要了解的并不是怎么去绘制而是设定绘制的样式%0a%0a%0a1.4.1颜色样式设置%0a%0a1.4.1.1 beginFill指定一种颜色进行填充%0a这里用到：%0abeginFill 指定一种颜色进行填充%0a在beginFill里面有2个参数.第一个是十六进制的颜色,第二个是填充的透明度（可选）.%0a%0a实例：%0a1.	var g=$.createShape({x:50,y:50,lifeTime:3,alpha:0.5});%0a2.	g.graphics.beginFill(0xff0000,0.5);%0a3.	g.graphics.beginFill(0xff0000);%0a这里用的一长串就是设置g的填充颜色以及透明度.两个都是有效的.%0agraphics则是是提供绘图的API.以后使用的时候都会用到这个.后面小括号内就是参数了.注：graphics前面的g必须是创建图形对象的名字%0a%0a1.4.1.2 lineGradientStyle beginGradientFill 指定一种线条样式,填充样式的渐变%0a这里需要用到：%0alineGradientStyle%0a指定一种线条样式的渐变%0abeginGradientFill%0a指定一种填充样式的渐变%0a详细请看：链接%0a1.	g.graphics.beginGradientFill("linear",[0xFF0000, 0x00FF00,0x0000FF],[1,1,1],[0x00,0x7f,0xff] ,$.createGradientBox(20, 20, 0, 0, 0),"reflect","rgb",0);%0atype 上例参数"linear"%0a用于指定要使用哪种渐变类型的 GradientType 类的值：GradientType.LINEAR 或 GradientType.RADIAL。%0acolors 上例参数[0xFF0000, 0x00FF00,0x0000FF]%0a要在渐变中使用的 RGB 十六进制颜色值数组（例如，红色为 0xFF0000，蓝色为 0x0000FF 等等）。%0aalphas 上例参数[1,1,1]   %0acolors 数组中对应颜色的 alpha 值数组；有效值为 0 到 100。 如果值小于 0，Flash playe将使用 0。 如果值大于100，Flash Player 将使用 100。%0aRatios 上例参数[0x00,0x7f,0xff]%0a颜色分布比率的数组；有效值为 0 到 255。该值定义 100%25 采样的颜色所在位置的宽度百分比。 值 0 表示渐变框中的左侧位置，255表示渐变框中的右侧位置。 该值表示渐变框中的位置，而不是最终渐变的坐标空间，坐标空间可能比渐变框宽或窄。 为 colors 参数中的每个值指定一个值。%0amatrix 上例参数$.createGradientBox(20, 20, 0, 0, 0)%0a一个由 Matrix 类定义的转换矩阵。 Matrix 类包括 createGradientBox() 方法，通过该方法可以方便地设置矩阵，以便与 beginGradientFill() 方法一起使用，亦可使用$.createGradientBox()。%0acreateGradientBox(20, 20, 0, 0, 0)中5个数值分别是.%0awidth — 渐变框的宽度。%0aheight — 渐变框的高度。%0arotation —旋转量（以弧度为单位）。%0atx — 沿 x 轴向右平移的距离（以像素为单位）。此值将偏移 width 参数的一半。%0aty — 沿 y 轴向下平移的距离（以像素为单位）。此值将偏移 height 参数的一半。%0aspreadMethod 上例参数"reflect"%0a用于指定要使用哪种 spread 方法的%0ainterpolationMethod 上例参数"rgb"%0a用于指定要使用哪个值的 值：linearRGB 或 rgb%0a例如，假设有两种颜色之间的简单线性渐变（spreadMethod 参数设置为 reflect）。%0afocalPointRatio 上例参数"0"%0a一个控制渐变的焦点位置的数字。 0 表示焦点位于中心。 1 表示焦点位于渐变圆的一条边界上。 -1 表示焦点位于渐变圆的另一条边界上。 小于 -1 或大于 1 的值将舍入为 -1 或 1。%0a%0a实际运用：%0a1.	var g = $.createShape({x:50,y:50,lifeTime:5});%0a2.	g.graphics.beginGradientFill("linear",[0xFF0000, 0x00FF00,0x0000FF],[1,1,1],[0x00,0x7f,0xff] , null,"reflect",0);%0a3.	g.graphics.drawCircle(0,0,50);%0a4.	g.graphics.endFill();%0a在实际运用中后面几个可以不填写或者值为null但是其中的colors ,alphas, Ratios数组必须存在并且对应数组长度.另Ratios数组内数值必须从小到大%0a%0a1.4.1.3 lineStyle 指定线条样式%0a这里用到：%0alineStyle%0a指定线条样式%0a1.	g.graphics.lineStyle(1, 0x000000,1, false, "vertical","none", "miter", 10);%0athickness 上例参数1%0a一个整数，以磅为单位表示线条的粗细；有效值为 0 到 255。如果未指定数字，或者未定义该参数，则不绘制线条。 如果传递的值小于 0，则默认值为 0。 值 0 表示极细的粗细；最大粗细为255。 如果传递的值大于 255，则默认值为 255。%0acolor 上例参数0x000000%0a线条的十六进制颜色值（例如，红色为 0xFF0000，蓝色为 0x0000FF 等）。 如果未指明值，则默认值为 0x000000（黑色）。 可选。%0aalpha 上例参数1%0a表示线条颜色的 Alpha 值的数字；有效值为 0 到 1。如果未指明值，则默认值为 1（纯色）。 如果值小于 0，则默认值为 0。 如果值大于 1，则默认值为 1。%0apixelHinting 上例参数false%0a用于指定是否提示笔触采用完整像素的布尔值。%0ascaleMode 上例参数"vertical"%0a用于指定要使用哪种缩放模式的 LineScaleMode 类的值：%0anormal -- 在缩放对象时总是缩放线条的粗细（默认值）。%0anone -- 从不缩放线条粗细。%0avertical -- 如果仅 垂直缩放对象，则不缩放线条粗细。%0ahorizontal -- *如果仅 水平缩放对象，则不缩放线条粗细。%0acaps 上例参数"none"%0a用于指定线条末端处端点类型的 CapsStyle 类的值。 有效值为：none、round 和 square. 如果未指示值，则 Flash 使用圆头端点。%0ajoints 上例参数"miter"  JointStyle 类的值，指定用于拐角的连接外观的类型。 有效值为：bevel、miter 和 round。 如果未指示值，则 Flash 使用圆角连接。%0amiterLimit 上例参数10%0a一个表示将在哪个限制位置切断尖角的数字。 有效值的范围是 1 到 255（超出该范围的值将舍入为 1 或 255）。%0amiterLimit 值：%0a小于此角度将被切断：%0a1.414      90度%0a2     60度%0a4     30度%0a8     15度%0a%0a实例：%0a1.	var g = $.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.lineStyle(1, 0x000000,1, false, "vertical","none", "miter", 10);%0a3.	g.graphics.lineTo(100,0);%0a4.	g.graphics.endFill();%0a%0a1.4.2图形的绘制%0a这里用到%0acurveTo%0a使用当前线条样式绘制一条二次贝塞尔曲线%0adrawCircle%0a绘制一个圆.%0adrawEllipse%0a绘制一个椭圆%0adrawRect%0a绘制一个矩形%0adrawRoundRect%0a绘制一个圆角矩形%0alineTo%0a使用当前线条样式绘制一条直线%0amoveTo%0a移动绘画位置到一个点%0a%0a这里先说明绘画位置的问题.%0a使用createShape命令内参数x.y轴的位置为初始绘画位置.%0a使用moveTo命令可以移动当前绘画位置.%0a例%0a1.	g.graphics.moveTo(100,100);%0a移动绘画位置到x轴100,y轴100的位置.%0a%0a1.4.2.1 绘制一条直线%0a命令：lineTo();%0a参数：lineTo(x,y);%0a参数说明：%0ax:相对于父显示对象的水平坐标.%0ay:相对于父显示对象的垂直坐标.%0a例：%0a1.	var g =$.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.lineTo(200,200);%0a3.	g.graphics.endFill();%0a以上弹幕看不到直线的？因为绘制线条之前必须设置线条样式或者设置填充样式绘制一个封闭图形.%0a正确的使用方法：%0a1.	var g =$.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.lineStyle(1, 0x000000,1, false, "vertical","none", "miter", 10);%0a3.	g.graphics.lineTo(200,200);%0a4.	g.graphics.endFill();%0a说明:该直线绘制直线的位置并不是播放器的x:200，y:200而是相对与createShape中100，100的基础上的x:200，y:200.也就是实际位置在播放器的x:300,y:300.%0a设置填充样式绘制一个封闭图形：%0a1.	var g = $.createShape({x:200,y:200,lifeTime:5});%0a2.	g.graphics.beginFill(0xff0000);%0a3.	g.graphics.lineTo(200,200);%0a4.	g.graphics.lineTo(100,200);%0a5.	g.graphics.lineTo(100,100);%0a6.	g.graphics.endFill();%0a当需要绘制多条不连续的直线时则需要使用到moveTo();%0a例：%0a1.	var g = $.createShape({x:200,y:200,lifeTime:5});%0a2.	g.graphics.lineStyle(1, 0x0000FF, 1, false, "vertical","none", "miter", 10);%0a3.	g.graphics.lineTo(100,100);%0a4.	g.graphics.moveTo(0,0);%0a5.	g.graphics.lineTo(-100,100);%0a6.	g.graphics.endFill();%0a%0a1.4.2.2 绘制一条二次贝塞尔曲线%0a命令：curveTo();%0a参数：curveTo(controlX,controlY,anchorX, anchorY);%0a参数说明：%0acontrolX: 指定控制点相对于父显示对象注册点的水平位置%0acontrolY: 指定控制点相对于父显示对象注册点的垂直位置%0aanchorX: 指定下一个锚点相对于父显示对象注册点的水平位置%0aanchorY: 指定下一个锚点相对于父显示对象注册点的垂直位置%0a%0a这里我们先不看例子.先来理解一下什么是控制点,什么是锚点.详细请看图.%0a以这样一个三角来确定绘制曲线.%0a实例:%0a1.	var g = $.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.lineStyle(1, 0x0000FF, 1, false, "vertical","none", "miter", 10);%0a3.	g.graphics.curveTo(50,-50,100,0);%0a4.	g.graphics.endFill();%0a%0a1.4.2.3 绘制一个圆%0a命令：drawCircle ();%0a参数：drawCircle (x,y,radius);%0a参数说明：%0ax: 相对于父显示对象注册点的水平位置%0ay: 相对于父显示对象注册点的垂直位置%0aradius: 圆的半径%0a%0a实例:%0a1.	var g = $.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.beginFill(0xff0000);%0a3.	g.graphics.drawCircle(0,0,30);%0a4.	g.graphics.endFill();%0a%0a1.4.2.4 绘制一个椭圆%0a命令：drawEllipse();%0a参数：drawEllipse(x,y,width,height);%0a参数说明：%0ax: 相对于父显示对象注册点的水平位置%0ay: 相对于父显示对象注册点的垂直位置%0awidth:椭圆的宽度%0aheight:椭圆的高度%0a%0a实例:%0a1.	var g = $.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.beginFill(0xff0000);%0a3.	g.graphics.drawEllipse(0,0,30,50);%0a4.	g.graphics.endFill();%0a%0a1.4.2.5 绘制一个矩形%0a命令：drawRect ();%0a参数：drawRect (x,y,width,height);%0a参数说明：%0ax: 相对于父显示对象注册点的水平位置%0ay: 相对于父显示对象注册点的垂直位置%0awidth:矩形的宽度%0aheight:矩形的高度%0a%0a实例:%0a1.	var g = $.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.beginFill(0xff0000);%0a3.	g.graphics.drawRect(0,0,30,50);%0a4.	g.graphics.endFill();%0a%0a1.4.2.6 绘制一个圆角矩形%0a命令：drawRoundRect();%0a参数：drawRoundRect(x,y,width,height,ellipseWidth,ellipseHeight);%0a参数说明：%0ax: 相对于父显示对象注册点的水平位置%0ay: 相对于父显示对象注册点的垂直位置%0awidth:矩形的宽度%0aheight:矩形的高度%0aellipseWidth:绘制圆角的宽度.%0aellipseHeight:绘制圆角的高度.%0a%0a实例:%0a1.	var g = $.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.beginFill(0xff0000);%0a3.	g.graphics.drawRoundRect(0,0,30,50,10,10);%0a4.	g.graphics.endFill();%0a至此关于绘制的图像也基本到了一段落.这里需要说明的是在高级弹幕设置参数中都是可以先前设定的变量代替参数.%0a例：%0a1.	var width = 30;var g = $.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.beginFill(0xff0000);%0a3.	g.graphics.drawRoundRect(0,0,width,50,10,10);%0a4.	g.graphics.endFill();%0a这样写是完全没问题.文本对象也是完全可以这么使用的.%0a至此高级弹幕里最最基础的部分也已经告了一段落.接下来的教程中讲重点讲创建后具体使用方面的知识.怎么运用其他工具让高级弹幕更上一层楼%0a%0a%0a%0a第二章 使用其他工具%0a%0a%0a2.1Utils 工具库%0a%0a使用命令：%0ahue：将0-360的值映射到色相环上%0argb：将RGB值映射到色彩值上%0aformatTimes：格式化播放时间%0adelay：延迟执行函数%0ainterval：定时执行函数%0adistance：计算座标距离%0arand：rand返回一个伪随机数 n，其中 min %3c= n %3c max。%0a%0a2.1.1hue将0-360的值映射到色相环上%0a命令：Utils.hue();%0a参数：Utils.hue(v);%0a参数说明：%0av: 取值范围:一个正整数. 0-360,如果超过360将自动换成除以360后的余数.例361等同与1；%0a%0a例：%0a1.	var v = 140;var color = Utils.hue(v);var g = $.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.beginFill(color);%0a3.	g.graphics.drawCircle(0,0,30);%0a4.	g.graphics.endFill();%0a%0a2.1.2 rgb将RGB值映射到色彩值上%0a命令：Utils.rgb();%0a参数：Utils.rgb(r,g,b);%0a参数说明：%0ar: RGB中红色的值.取值范围:一个正整数,0-255,如果超过255将自动换成除以255后的余数.%0ag: RGB中绿色的值.同上%0ab: RGB中蓝色的值.同上%0a1.	var color = Utils.rgb(255,255,255);var g = $.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.beginFill(color);%0a3.	g.graphics.drawCircle(0,0,30);%0a4.	g.graphics.endFill();%0a%0a2.1.3 formatTimes格式化播放时间%0a命令：Utils.formatTimes ();%0a参数：Utils.formatTimes (time);%0a参数说明：%0atime: 一个数字.格式化后将变成 00:00的文本形式.%0a例：%0a1.	var t = Utils.formatTimes(Player.time/1000);%0a2.	var c = "视频时间："+t;%0a3.	var g = $.createComment(c,{x:100,y:100,lifeTime:5});%0a%0a2.1.4 timer 延迟执行函数%0a命令：timer ();%0a参数：timer (f,time);%0a参数说明：%0af: 要延迟执行的函数.%0atime: 延迟执行的时间.以毫秒为单位.%0a例:%0a1.	timer(function(){%0a2.	var g = $.createShape({x:100,y:100,lifeTime:5});%0a3.	g.graphics.beginFill(0xffffff);%0a4.	g.graphics.drawCircle(0,0,30);%0a5.	g.graphics.endFill();%0a6.	},1000);%0a%0a2.1.5 interval 定时重复执行函数%0a命令：interval ();%0a参数：interval(f,time,times);%0a参数说明：%0af: 要延迟执行的函数.%0atime: 延迟执行的时间.以毫秒为单位.%0atimes:执行函数的次数.%0a例:%0a1.	var g = $.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.beginFill(0xffffff);%0a3.	g.graphics.drawCircle(0,0,30);%0a4.	g.graphics.endFill();%0a5.	interval(function(){g.x+=40;},1000,5);%0a说明：每隔1秒绘制的圆向右移40像素.%0a%0a2.1.6 distance 计算坐标距离%0a命令：Utils.distance ();%0a参数：Utils.distance(x1,y1,x2,y2);%0a参数说明：%0ax1: 计算起始坐标x轴%0ay1: 计算起始坐标y轴%0ax2: 计算结束坐标x轴%0ay2: 计算结束坐标y轴%0a1.	var d = Utils.distance(100,100,200,200);%0a2.	var g = $.createShape({x:100,y:100,lifeTime:5});%0a3.	g.graphics.lineStyle(1, 0x0000FF, 1, false, "vertical","none", "miter", 10);%0a4.	g.graphics.lineTo(0,d);%0a5.	g.graphics.endFill();%0a创建新的Point（一个点）.%0a命令：$.createPoint();%0a参数：$.createPoint(x,y);%0a参数说明：%0ax: 坐标x轴%0ay: 坐标y轴%0a例：%0a1.	var p1 = $.createPoint (100,100);var p2 = $.createPoint (200,200);%0a2.	var d = Utils.distance(p1.x,p1.y,p2.x,p2.y);%0a3.	var g = $.createShape({x:100,y:100,lifeTime:5});%0a4.	g.graphics.lineStyle(1, 0x0000FF, 1, false, "vertical","none", "miter", 10);%0a5.	g.graphics.lineTo(0,d);%0a6.	g.graphics.endFill();%0a解释：创建2个新的Point对象并计算坐标距离.并绘制一条长为此距离的直线.%0a%0a2.1.7 rand 返回一个前闭后开的整数%0a命令：Utils.rand ();%0a参数：Utils.rand(min,max);%0a参数说明：%0amin: 伪随机数最小值%0amax: 伪随机数最大值%0a例：%0a1.	var g = $.createShape({x:100,y:100,lifeTime:5});%0a2.	g.graphics.beginFill(0xffffff);%0a3.	g.graphics.drawCircle(0,0,30);%0a4.	g.graphics.endFill();%0a5.	interval(function(){g.x+=Utils.rand(30,500);},1000,5);%0a说明：该弹幕绘制了一个圆,然后每隔1秒重复5次将该圆相对x轴位置移动到30-500中随机位置.%0a%0a%0a2.2 Function 函数的创建与使用%0a%0a函数在高级弹幕中有着至关紧要的作用.在今后的运用中是一个必不可少的存在.%0a函数就是定义一套对应规则.使得集合A的元素对应到另一个集合B的唯一元素.%0a%0a函数具有一下特性:%0a1.拥有输入和输出两组数据.%0a2.函数定义了一套对应规则，该规则是固定的,也就是函数的行为是固定的.%0a3.某一输出值拥有唯一的输出值.%0a%0a我们下面直接来看函数语句在高级弹幕中的用法.%0a1.	function fname(pa1,pa2)%0a2.	{%0a3.	    trace(pa1+pa2);4.	};%0a上面就是一个最基本的函数.在每函数语句中包含着3个要素:%0a函数名：上例参数fname%0a用来作为函数引用标识.%0a参数：上例参数（pa1,pa2）%0a一组用小括号括起来的一组数据,参数之间用逗号分隔.函数可有空参数.%0a函数体：上例参数{trace(pa1+pa2);}%0a是实现函数功能的代码,代码用大括号括起来,在使用函数时将执行代码.%0a%0a那么这个例子中的函数就是定义一个名为fname的函数.函数体是输出pa1+pa2.%0a另在函数的里面是可以创建函数的.但是在函数内创建的函数不能与外面的函数重名.%0a%0a那么我们来看下面这个例子：%0a1.	function dm(txt,Vx,Vy,Vfontsize,Valpha)%0a2.	{%0a3.	    var c = $.createComment(txt,{%0a4.	    x:Vx,%0a5.	    y:Vy,%0a6.	    fontsize:Vfontsize,%0a7.	    alpha:Valpha%0a8.	    });%0a9.	};%0a10.	dm("1",100,100,20,1);%0a11.	dm("2",150,150,20,1);%0a12.	dm("3",200,200,20,1);%0a上面就完整的写明了函数的创建到使用.这里使用函数更加简便的使用了创建文本弹幕.方便多次使用.%0a这里需要注意的是在函数里面创建的变量是不能在函数外面使用的.更多详细的内容会在以后说到.%0a%0a%0a2.3 播放器控制%0a使用命令:%0aPlayer.seek();%0aPlayer.jump(,);%0a%0a2.3.1视频时间跳转至%0a命令：Player.seek();%0a参数：Player.seek(offset);%0a参数说明：%0aoffset:要在视频文件中移动到的时间近似值（以毫秒为单位）.详细请看;%0a例：%0a1.	Player.seek(1000);%0a%0a2.3.2跳转到指定av号指定页视频%0a命令：Player.jump();%0a参数：Player.jump(av,page,.newwindow);%0a参数说明：%0aav:要跳转视频的av号码.%0apage:要跳转视频的第几页.%0anewwindow:是否打开新窗口跳转值为 flase为不打开.值为true打开.不填写默认值打开%0a1.	Player.jump(“av120040”,1,flase);%0a%0a%0a%0a高级弹幕的学习到这里已经告了一段落.%0a在这里只说明了基础的运用.有时间我会写进阶运用方法.%0a如果有什么不懂的可以把问题发送到我邮箱301082782@qq.com .%0a其实说实话我也是一个半吊子.教程可能有很多地方有问题.所以欢迎大家积极的指出来.%0a%0a那么~高级弹幕初阶教程到此结束
time=1652101145
author:1652101145=Admin
